// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    ext {
        kotlin_version = "1.3.61"
        rxJavaVersion = "2.1.6"
        daggerVersion = "2.21"
        rxAndroidVersion = "2.0.1"
        retrofitVersion = "2.5.0"
        libs = [
                rxJava: ('io.reactivex.rxjava2:rxjava:' + rxJavaVersion),
                rxAndroid       : ('io.reactivex.rxjava2:rxandroid:' + rxAndroidVersion),
                dagger: ('com.google.dagger:dagger:' + daggerVersion ),
                daggerCompiler: ('com.google.dagger:dagger-compiler:' + daggerVersion ),
                daggerProcessor: ("com.google.dagger:dagger-android-processor:" + daggerVersion),
                daggerAndroid: ("com.google.dagger:dagger-android:" + daggerVersion),
                daggerAndroidSupport: ("com.google.dagger:dagger-android-support:" + daggerVersion),
                retrofit: ('com.squareup.retrofit2:retrofit:' + retrofitVersion),
                gson: 'com.google.code.gson:gson:2.8.5',
                gsonConverter: ('com.squareup.retrofit2:converter-gson:' + retrofitVersion),
                rxJavaConverter: ('com.squareup.retrofit2:adapter-rxjava2:' + retrofitVersion),
                fireStore: 'com.google.firebase:firebase-firestore:18.2.0',
                firebaseCore: 'com.google.firebase:firebase-core:16.0.9'
        ]
    }

    repositories {
        google()
        jcenter()
        maven { url "https://maven.google.com" }

        mavenCentral()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.2.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url "https://maven.google.com" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
